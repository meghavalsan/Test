-- Create tables for PAM

CREATE TABLE tenant (id INT,
					name VARCHAR(256),
					uid VARCHAR(16),
					creation_date DATETIME,
					modified_date DATETIME,
					timezone VARCHAR(256),
					PRIMARY KEY (id));

CREATE TABLE edna (feeder_id INT,
					extended_id VARCHAR(128),
					timestamp_utc DATETIME,
					value DOUBLE, 
					value_string VARCHAR(64),
					status VARCHAR(16),
					score DOUBLE,
					tenant_id INT,
					INDEX edna_indx1 (feeder_id, timestamp_utc),
					INDEX edna_indx2 (feeder_id, extended_id),
					FOREIGN KEY (tenant_id) REFERENCES tenant(id));
			
CREATE TABLE scada (feeder_id INT,
					value VARCHAR(256),
					timestamp_utc DATETIME,
					score DOUBLE,
					tenant_id INT,
					INDEX scada_indx1 (feeder_id, timestamp_utc),
					FOREIGN KEY (tenant_id) REFERENCES tenant(id));

CREATE TABLE ami (feeder_id INT,
				  meter_id VARCHAR(64),
				  event_id VARCHAR(512),
				  timestamp_utc DATETIME,
				  score DOUBLE,
          tenant_id INT,
          INDEX ami_indx1 (feeder_id, timestamp_utc),
          FOREIGN KEY (tenant_id) REFERENCES tenant(id));

CREATE TABLE tickets (feeder_id INT,
                      dw_ticket_id VARCHAR(64),
                      trbl_ticket_id VARCHAR(64),
                      irpt_type_code VARCHAR(64),
                      irpt_cause_code VARCHAR(64),
                      support_code VARCHAR(64),
                      cmi DOUBLE,
                      power_off DATETIME,
                      power_restore DATETIME,
                      repair_action_type VARCHAR(512),
                      repair_action_description VARCHAR(512),
                      score DOUBLE,
                      tenant_id INT,
                      INDEX tickets_indx1 (feeder_id),
                      FOREIGN KEY (tenant_id) REFERENCES tenant(id));

CREATE TABLE signatures (feeder_id INT,
                         timestamp_utc DATETIME,
                         model_id VARCHAR(64),
                         probability DOUBLE,
                         tier DOUBLE,
                         alert VARCHAR(64),
                         processedTime_utc DATETIME,
                         tenant_id INT,
                         sent TINYINT,
                         INDEX signatures_indx1 (feeder_id),
                         FOREIGN KEY (tenant_id) REFERENCES tenant(id));

CREATE TABLE anomaly (anomaly VARCHAR(128),
	                    deviceId VARCHAR(32),
	                    devicePh VARCHAR(16),
	                    deviceType VARCHAR(16),
	                    feeder INT,
	                    signal_id VARCHAR(256),
	                    timestamp_utc DATETIME,
	                    processedTime_utc DATETIME,
	                    isProcessed TINYINT,
	                    tenant_id INT,
	                    FOREIGN KEY (tenant_id) REFERENCES tenant(id));

CREATE TABLE feeder_metadata (feeder_id INT,
	                    1ph_ocr INT,
	                    3ph_ocr INT,
	                    4n_feeder TINYINT,
	                    afs INT,
	                    afs_scheme VARCHAR(64),
	                    area VARCHAR(16),
	                    capbank INT,
	                    cemm35_feeder TINYINT,
	                    commercial INT,
	                    county VARCHAR(64),
	                    customers INT,
	                    fci INT,
	                    fdr_oh DOUBLE,
	                    fdr_ug DOUBLE,
	                    hardening DATE,
	                    industrial INT,
	                    install_date DATE,
	                    kv VARCHAR(16),
	                    lat_oh DOUBLE,
	                    lat_ug DOUBLE,
	                    pole_count DOUBLE,
	                    region VARCHAR(16),
	                    relay VARCHAR(16),
	                    residential INT,
	                    substation VARCHAR(64),
	                    type VARCHAR(16),
	                    has_afs TINYINT,
	                    has_afs_ocr TINYINT,
	                    is_dade TINYINT,
	                    has_industrial TINYINT,
	                    length DOUBLE,
	                    pct_ug TINYINT,
	                    oh_fdr TINYINT,
	                    ug_fdr TINYINT,
	                    hybrid TINYINT,
	                    PRIMARY KEY (feeder_id));

CREATE TABLE alerts (feeder_id INT,
	                    alert_type VARCHAR(64),
	                    alert_sent_utc DATETIME,
	                    model_version VARCHAR(64),
	                    alert_time_utc DATETIME,
			    		raw_json TEXT,
			    		published_to_kafka TINYINT,
	                    sent_email TINYINT,
			    		tenant_id INT,
			    		FOREIGN KEY (tenant_id) REFERENCES tenant(id));

CREATE TABLE models (id INT,
                        model_version VARCHAR(64),
                        model_path VARCHAR(256),
                        active TINYINT,
                        tenant_id INT,
                        PRIMARY KEY (id, tenant_id),
                        FOREIGN KEY (tenant_id) REFERENCES tenant(id));
